"use client";

import { useState, useEffect } from "react";
import dynamic from "next/dynamic";
import Link from "next/link";
import { MapPin, Search, Check, Ruler, Phone } from "lucide-react";

import { SERVICE_POLYGON } from "@/components/ServiceAreaMap";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Card, CardHeader, CardTitle, CardContent } from "@/components/ui/card";

const ServiceAreaMap = dynamic(() => import("@/components/ServiceAreaMap"), {
  ssr: false,
  loading: () => <div className="h-[500px] w-full bg-neutral-100 animate-pulse" />,
});

function pointInPolygon([lat, lon]: [number, number], poly: [number, number][]) {
  const x = lon, y = lat;
  let inside = false;
  for (let i = 0, j = poly.length - 1; i < poly.length; j = i++) {
    const [yi, xi] = poly[i];
    const [yj, xj] = poly[j];
    const intersect = yi > y !== yj > y && x < ((xj - xi) * (y - yi)) / (yj - yi) + xi;
    if (intersect) inside = !inside;
  }
  return inside;
}

export default function ServiceAreaContent() {
  const [query, setQuery] = useState("");
  const [status, setStatus] = useState<'idle'|'loading'|'done'>("idle");
  const [inside, setInside] = useState<boolean|null>(null);
  const [searchedLocation, setSearchedLocation] = useState<[number, number] | null>(null);
  const [error, setError] = useState("");
  const [isMounted, setIsMounted] = useState(false);
  const [animationStyles, setAnimationStyles] = useState<Array<React.CSSProperties>>([]);
  const [pinStyles, setPinStyles] = useState<Array<React.CSSProperties>>([]);

  useEffect(() => {
    setIsMounted(true);
    
    // Generate animation styles on client side only
    const lineAnimations = Array(10).fill(0).map((_, i) => ({
      transform: `rotate(${Math.random() * 360}deg)`,
      top: `${Math.random() * 100}%`,
      left: `${Math.random() * 100}%`,
      width: `${Math.random() * 100 + 100}px`,
      animation: `moveLine ${Math.random() * 40 + 20}s linear infinite`,
      animationDelay: `-${Math.random() * 20}s`,
      opacity: 0.7
    }));
    
    const pinAnimations = Array(15).fill(0).map((_, i) => ({
      top: `${Math.random() * 100}%`,
      left: `${Math.random() * 100}%`,
      animation: `pulsePin ${Math.random() * 3 + 2}s ease-in-out infinite`,
      animationDelay: `-${Math.random() * 5}s`
    }));
    
    setAnimationStyles(lineAnimations);
    setPinStyles(pinAnimations);
  }, []);

  const handleSearch = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!query.trim()) return;
    
    setStatus('loading');
    setError('');
    
    try {
      const response = await fetch(
        `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}&limit=1`
      );
      
      const data = await response.json();
      
      if (data && data.length > 0) {
        const { lat, lon } = data[0];
        const location: [number, number] = [parseFloat(lat), parseFloat(lon)];
        setSearchedLocation(location);
        setInside(pointInPolygon(location, SERVICE_POLYGON));
        setStatus('done');
      } else {
        setError('Location not found. Please try a different address or city.');
        setStatus('idle');
      }
    } catch (err) {
      console.error('Error searching location:', err);
      setError('Failed to search location. Please try again later.');
      setStatus('idle');
    }
  };

  return (
    <div className="relative">
      {/* Hero Section */}
      <section className="relative py-20 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-gray-900 dark:to-gray-800 overflow-hidden">
        <div className="absolute inset-0 opacity-20 dark:opacity-10">
          <div className="absolute inset-0 bg-[url('/images/grid-pattern.svg')] opacity-30 dark:opacity-10" />
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className="max-w-4xl mx-auto text-center">
            <h1 className="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-6">
              Our Service Area
            </h1>
            <p className="text-xl text-gray-700 dark:text-gray-300 mb-8">
              Serving Central Alberta with quality gutter services for over 40 years.
              Check if we service your area below.
            </p>
            
            <form onSubmit={handleSearch} className="max-w-2xl mx-auto">
              <div className="relative">
                <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                  <Search className="h-5 w-5 text-gray-400" />
                </div>
                <Input
                  type="text"
                  value={query}
                  onChange={(e) => setQuery(e.target.value)}
                  className="pl-10 pr-4 py-6 text-lg rounded-xl border-2 border-gray-300 focus:border-blue-500 focus:ring-2 focus:ring-blue-200 dark:focus:ring-blue-800 dark:border-gray-600 dark:bg-gray-800 dark:text-white"
                  placeholder="Enter your address or city"
                  disabled={status === 'loading'}
                />
                <Button
                  type="submit"
                  variant="primary"
                  className="absolute right-1 top-1/2 -translate-y-1/2 h-12 px-6 rounded-lg"
                  disabled={status === 'loading' || !query.trim()}
                >
                  {status === 'loading' ? 'Checking...' : 'Check Coverage'}
                </Button>
              </div>
            </form>
            
            {error && (
              <p className="mt-4 text-red-500 dark:text-red-400">{error}</p>
            )}
            
            {status === 'done' && searchedLocation && (
              <div className="mt-8 p-6 bg-white dark:bg-gray-800 rounded-2xl shadow-lg">
                <div className={`flex items-center justify-center space-x-3 text-lg ${inside ? 'text-green-600 dark:text-green-400' : 'text-amber-600 dark:text-amber-400'}`}>
                  {inside ? (
                    <>
                      <Check className="h-6 w-6" />
                      <span>Yes! We service your area.</span>
                    </>
                  ) : (
                    <>
                      <MapPin className="h-6 w-6" />
                      <span>We don't currently service your area, but we're expanding!</span>
                    </>
                  )}
                </div>
                {!inside && (
                  <p className="mt-4 text-gray-700 dark:text-gray-300">
                    Contact us for special requests or to be notified when we expand to your area.
                  </p>
                )}
              </div>
            )}
          </div>
        </div>
      </section>

      {/* Map Section */}
      <section className="relative py-16 bg-white dark:bg-gray-900">
        <div className="container mx-auto px-4">
          <div className="max-w-6xl mx-auto">
            <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden border border-gray-200 dark:border-gray-700">
              <ServiceAreaMap highlightMarker={searchedLocation} />
            </div>
          </div>
        </div>
      </section>

      {/* Coverage Areas Section */}
      <section className="relative py-20 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-gray-900 dark:to-gray-800 overflow-hidden">
        <div className="absolute inset-0 opacity-20 dark:opacity-10">
          <div className="absolute inset-0 bg-[url('/images/grid-pattern.svg')] opacity-30 dark:opacity-10" />
        </div>
        
        <div className="container mx-auto px-4 relative z-10">
          <div className="max-w-4xl mx-auto text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
              Our Coverage Area
            </h2>
            <p className="text-xl text-gray-700 dark:text-gray-300">
              We proudly serve the following areas in Central Alberta:
            </p>
          </div>
          
          <div className="grid md:grid-cols-3 gap-8 mb-16">
            <div className="group relative p-8 rounded-2xl bg-white/90 dark:bg-gray-800/95 backdrop-blur-sm shadow-lg hover:shadow-xl transition-all duration-300 border border-white/20 hover:border-amber-300/30 dark:border-gray-700 dark:hover:border-amber-500/30">
              <div className="absolute -top-6 -right-6 w-24 h-24 bg-amber-400/10 dark:bg-amber-500/10 rounded-full group-hover:scale-110 transition-transform duration-500" />
              <div className="relative z-10">
                <div className="w-16 h-16 mb-6 mx-auto rounded-2xl bg-gradient-to-br from-amber-400 to-amber-500 dark:from-amber-500 dark:to-amber-600 flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300">
                  <Ruler className="h-8 w-8 text-white" />
                </div>
                <h3 className="text-2xl font-bold text-center text-gray-900 dark:text-white mb-4">North Boundary</h3>
                <ul className="space-y-3 text-gray-700 dark:text-gray-300">
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-amber-500 rounded-full mr-2"></span>
                    <span>Edmonton</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-amber-500 rounded-full mr-2"></span>
                    <span>St. Albert</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-amber-500 rounded-full mr-2"></span>
                    <span>Spruce Grove</span>
                  </li>
                </ul>
              </div>
            </div>
            
            <div className="group relative p-8 rounded-2xl bg-white/90 dark:bg-gray-800/95 backdrop-blur-sm shadow-lg hover:shadow-xl transition-all duration-300 border border-white/20 hover:border-amber-300/30 dark:border-gray-700 dark:hover:border-amber-500/30">
              <div className="absolute -top-6 -left-6 w-24 h-24 bg-blue-400/10 dark:bg-blue-500/10 rounded-full group-hover:scale-110 transition-transform duration-500" />
              <div className="relative z-10">
                <div className="w-16 h-16 mb-6 mx-auto rounded-2xl bg-gradient-to-br from-blue-400 to-blue-500 dark:from-blue-500 dark:to-blue-600 flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300">
                  <MapPin className="h-8 w-8 text-white" />
                </div>
                <h3 className="text-2xl font-bold text-center text-gray-900 dark:text-white mb-4">Central Region</h3>
                <ul className="space-y-3 text-gray-700 dark:text-gray-300">
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                    <span>Lacombe</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                    <span>Red Deer</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-blue-500 rounded-full mr-2"></span>
                    <span>Blackfalds</span>
                  </li>
                </ul>
              </div>
            </div>
            
            <div className="group relative p-8 rounded-2xl bg-white/90 dark:bg-gray-800/95 backdrop-blur-sm shadow-lg hover:shadow-xl transition-all duration-300 border border-white/20 hover:border-amber-300/30 dark:border-gray-700 dark:hover:border-amber-500/30">
              <div className="absolute -bottom-6 -right-6 w-24 h-24 bg-green-400/10 dark:bg-green-500/10 rounded-full group-hover:scale-110 transition-transform duration-500" />
              <div className="relative z-10">
                <div className="w-16 h-16 mb-6 mx-auto rounded-2xl bg-gradient-to-br from-green-400 to-green-500 dark:from-green-500 dark:to-green-600 flex items-center justify-center shadow-lg group-hover:scale-110 transition-transform duration-300">
                  <Phone className="h-8 w-8 text-white" />
                </div>
                <h3 className="text-2xl font-bold text-center text-gray-900 dark:text-white mb-4">South Boundary</h3>
                <ul className="space-y-3 text-gray-700 dark:text-gray-300">
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    <span>Ponoka</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    <span>Wetaskiwin</span>
                  </li>
                  <li className="flex items-center">
                    <span className="w-2 h-2 bg-green-500 rounded-full mr-2"></span>
                    <span>Leduc</span>
                  </li>
                </ul>
              </div>
            </div>
          </div>
          
          <div className="text-center">
            <div className="inline-flex flex-col sm:flex-row gap-4">
              <Button asChild variant="secondary" size="lg" className="group">
                <Link href="/contact" className="flex items-center gap-2">
                  <Phone className="h-5 w-5 group-hover:animate-pulse" />
                  Request a Free Estimate
                </Link>
              </Button>
              
              <Button asChild variant="outline" size="lg" className="group">
                <Link href="/contact?subject=Special%20Service%20Request" className="flex items-center gap-2">
                  <span>Special Request</span>
                  <svg className="w-5 h-5 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </Link>
              </Button>
            </div>
            
            <p className="mt-6 text-gray-600 dark:text-gray-400">
              Don't see your area listed? Contact us to check if we can service your location.
            </p>
          </div>
        </div>
      </section>

      {/* Global Keyframes */}
      <style jsx global>{`
        @keyframes panTexture {
          0% { background-position: 0 0; }
          100% { background-position: 400px 400px; }
        }
        @keyframes panGrid {
          0% { background-position: 0 0; }
          100% { background-position: 40px 40px; }
        }
        @keyframes moveLine {
          0% { transform: translateX(-100%) rotate(45deg); }
          100% { transform: translateX(100vw) rotate(45deg); }
        }
        @keyframes gradientShift {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
        @keyframes panDiagonal {
          0% { background-position: 0 0; }
          100% { background-position: 400px 400px; }
        }
        @keyframes pulsePin {
          0%, 100% {
            transform: scale(1);
            opacity: 0.3;
          }
          50% {
            transform: scale(1.5);
            opacity: 0.8;
          }
        }
        @keyframes pulseGlow {
          0%, 100% { opacity: 0.05; }
          50% { opacity: 0.15; }
        }
        .animate-panDiagonal {
          animation: panDiagonal 160s linear infinite;
        }
        .animate-panDiagonalReverse {
          animation: panDiagonalReverse 160s linear infinite;
        }
        .animate-pulseGlow {
          animation: pulseGlow 8s ease-in-out infinite;
        }
      `}</style>
    </div>
  );
}
